🎯 Goal: factorial(5)
Expected output: 120 → as a list: [1, 2, 0]

🔸 Initial State
int n = 5;
int temp[] = new int[10000];
temp[0] = 1;
size = 1;  // only 1 digit in temp[]

🧩 1st Iteration: mul = 2
We multiply current number in temp (1) with 2

i	temp[i]	result (2×temp[i]+carry)	New temp[i]	carry
0	1	2×1 + 0 = 2	2	0

No carry left to process.

✅ temp = [2], size = 1

🧩 2nd Iteration: mul = 3
We multiply 2 by 3

i	temp[i]	result (3×temp[i]+carry)	New temp[i]	carry
0	2	3×2 + 0 = 6	6	0

No carry left.

✅ temp = [6], size = 1

🧩 3rd Iteration: mul = 4
Now temp = [6] → so we compute 6 × 4 = 24

i	temp[i]	result (4×temp[i]+carry)	New temp[i]	carry
0	6	4×6 + 0 = 24	4	2

Carry = 2 needs to be added at new position:

temp[1] = 2

size = 2

✅ temp = [4, 2] (means 24 reversed), size = 2

🧩 4th Iteration: mul = 5
Now temp = [4, 2] → so we compute 24 × 5 = 120

i	temp[i]	result (5×temp[i]+carry)	New temp[i]	carry
0	4	5×4 + 0 = 20	0	2
1	2	5×2 + 2 = 12	2	1

Carry = 1 needs to be added at new position:

temp[2] = 1

size = 3

✅ temp = [0, 2, 1], size = 3 → means 120 (in reverse)

✅ Final Step:
for (i = size-1 to 0):
    result.add(temp[i])
temp = [0, 2, 1]
→ reverse: 1, 2, 0

✅ Final output: [1, 2, 0]

🔍 Summary Table of All Iterations
mul	temp[] (reversed)	size
1	      [1]	           1
2	      [2]            1
3	      [6]	           1
4	      [4, 2]	       2
5	      [0, 2, 1]	     3

